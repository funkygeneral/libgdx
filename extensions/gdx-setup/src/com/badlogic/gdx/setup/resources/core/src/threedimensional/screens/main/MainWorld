package %PACKAGE%.screens.main;

import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.physics.bullet.collision.btBoxShape;
import com.badlogic.gdx.utils.ArrayMap;
import %PACKAGE%.Assets;
import %PACKAGE%.extendables.%MAIN_CLASS%World;
import %PACKAGE%.objects.models.GameObject;
import %PACKAGE%.objects.models.Character;
import %PACKAGE%.objects.models.Floor;

public class MainWorld extends %MAIN_CLASS%World {
    private static final String TAG = MainWorld.class.getSimpleName();

    public static final int STATE_PLAY = 0;
    public static final int STATE_SETTINGS = 1;

    private static final String NODE_CHARCTER = "Character";
    private static final String NODE_FLOOR = "Floor";

    public Character character;
    public Floor floor;

    public MainWorld() {
        super();
        fillConstructors();
        makeInstances();
    }

    private void fillConstructors() {
        constructors = new ArrayMap<String, GameObject.Constructor>(String.class, GameObject.Constructor.class);
        constructors.put(NODE_FLOOR, new GameObject.Constructor(Assets.macocoModel, NODE_FLOOR, new btBoxShape(new Vector3(7.5f, 0.5f, 7.5f))));
        constructors.put(NODE_CHARCTER, new GameObject.Constructor(Assets.macocoModel, NODE_CHARCTER, new btBoxShape(new Vector3(1f, 2.8f, 0.5f))));
    }

    private void makeInstances() {
        GameObject waterObject = constructors.get(NODE_FLOOR).construct();
        floor = new Floor(waterObject);
        floor.setPosition(new Vector3(0, -0.5f, 0));
        collisionWorld.addCollisionObject(floor.gameObject.body);

        GameObject macocoObject = constructors.get(NODE_CHARCTER).construct();
        character = new Character(macocoObject);
        character.setPosition(new Vector3(0, 3, 0));
        collisionWorld.addCollisionObject(character.gameObject.body);
    }

    public void dispose() {
        floor.gameObject.dispose();
        character.gameObject.dispose();
        super.dispose();
    }
}
