package %PACKAGE%.screens.main;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.graphics.GL20;
import %PACKAGE%.Assets;
import %PACKAGE%.%MAIN_CLASS%;
import %PACKAGE%.Settings;
import %PACKAGE%.extendables.%MAIN_CLASS%Screen;
import %PACKAGE%.screens.game.GameScreen;

public class MainScreen extends %MAIN_CLASS%Screen {
    private static final String TAG = MainScreen.class.getSimpleName();

    private MainMenu menu;
    private MainMenuRenderer menuRenderer;
    private MainWorld world;
    private MainWorldRenderer worldRenderer;

    public MainScreen(%MAIN_CLASS% game) {
        super(game);
        menu = new MainMenu();
        menuRenderer = new MainMenuRenderer(menu);
        world = new MainWorld();
        worldRenderer = new MainWorldRenderer(world);
        worldRenderer.debugMode = false;
    }

    public void render(float delta) {
        super.render(delta);
        worldRenderer.render();
        menuRenderer.render();
    }

    public void dispose() {
        world.dispose();
        worldRenderer.dispose();
        menuRenderer.dispose();
    }

    @Override
    public boolean keyDown(int keycode) {
        switch (keycode) {
            case Input.Keys.ENTER:
                game.setScreen(new GameScreen(game));
                break;
        }
        return false;
    }

    @Override
    public boolean keyUp(int keycode) {
        switch (keycode) {
            case Input.Keys.ESCAPE:
                game.setScreen(new MainScreen(game));
                break;
        }
        return false;
    }

    @Override
    public boolean touchDown(int screenX, int screenY, int pointer, int button) {
        return false;
    }

    @Override
    public boolean touchUp(int screenX, int screenY, int pointer, int button) {
        touchPoint.set(Gdx.input.getX(), Math.abs(Gdx.input.getY() - Gdx.graphics.getHeight()), 0);
        switch (world.state) {
            case MainWorld.STATE_PLAY:
                if (menu.playButton.bounds.contains(touchPoint.x, touchPoint.y)) {
                    Assets.playSound(Assets.clickSound);
                    game.setScreen(new GameScreen(game));
                }
                if (menu.settingsButton.bounds.contains(touchPoint.x, touchPoint.y)) {
                    Assets.playSound(Assets.clickSound);
                    world.state = MainWorld.STATE_SETTINGS;
                    menu.soundButton.scale = 1;
                    menu.playButton.scale = 0;
                    menu.settingsButton.frame = 0;
                    menu.settingsButton.descriptionString = "Play";
                }
                break;
            case MainWorld.STATE_SETTINGS:
                if (menu.soundButton.bounds.contains(touchPoint.x, touchPoint.y)) {
                    if (Settings.soundEnabled) {
                        menu.soundButton.frame = 4;
                        menu.soundButton.descriptionString = "Sound off";
                        Settings.soundEnabled = false;
                        Settings.save();
                    } else {
                        menu.soundButton.frame = 3;
                        menu.soundButton.descriptionString = "Sound on";
                        Settings.soundEnabled = true;
                        Assets.playSound(Assets.clickSound);
                    }
                    Settings.save();
                }
                if (menu.settingsButton.bounds.contains(touchPoint.x, touchPoint.y)) {
                    Assets.playSound(Assets.clickSound);
                    world.state = MainWorld.STATE_PLAY;
                    menu.soundButton.scale = 0;
                    menu.playButton.scale = 1;
                    menu.settingsButton.frame = 2;
                    menu.settingsButton.descriptionString = "Settings";
                }
                break;
        }
        return false;
    }
}