package %PACKAGE%.extendables;

import com.badlogic.gdx.Application;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.InputProcessor;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.math.Vector3;
import %PACKAGE%.%MAIN_CLASS%;

public class %MAIN_CLASS%Screen implements Screen, InputProcessor {

    public float CENTER_X, CENTER_Y, STAGE_WIDTH, STAGE_HEIGHT;
    public %MAIN_CLASS% game;

    public Vector3 touchPoint;
    Application.ApplicationType appType;

    public %MAIN_CLASS%Screen(%MAIN_CLASS% game) {
        this.game = game;

        this.CENTER_X = Gdx.graphics.getWidth() / 2;
        this.CENTER_Y = Gdx.graphics.getHeight() / 2;
        this.STAGE_WIDTH = Gdx.graphics.getWidth();
        this.STAGE_HEIGHT = Gdx.graphics.getHeight();

        this.touchPoint = new Vector3();
        this.appType = Gdx.app.getType();
    }

    @Override
    public void show() {
        Gdx.input.setCatchBackKey(true);
        Gdx.input.setInputProcessor(this);
    }

    @Override
    public void render(float delta) {
        Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);
    }

    @Override
    public void dispose() {

    }

    @Override
    public void pause() {
    }

    @Override
    public void resume() {
    }

    @Override
    public void hide() {

    }

    @Override
    public void resize(int width, int height) {

    }

    /**
     * INPUTS
     *
     *
     */

    @Override
    public boolean keyDown(int keycode) {
        switch (keycode) {
            case Input.Keys.SPACE:
                break;
        }
        return false;
    }

    @Override
    public boolean keyUp(int keycode) {
        switch (keycode) {
            case Input.Keys.SPACE:
                break;
        }
        return false;
    }

    @Override
    public boolean keyTyped(char character) {
        return false;
    }

    @Override
    public boolean touchDown(int screenX, int screenY, int pointer, int button) {
        return false;
    }

    @Override
    public boolean touchUp(int screenX, int screenY, int pointer, int button) {
        return false;
    }

    @Override
    public boolean touchDragged(int screenX, int screenY, int pointer) {
        return false;
    }

    @Override
    public boolean mouseMoved(int screenX, int screenY) {
        return false;
    }

    @Override
    public boolean scrolled(int amount) {
        return false;
    }
}
